{"version":3,"sources":["components/bioContent.js","components/githubContent.js","components/resumeContent.js","components/dropdown.js","components/pageElement.js","components/App.js","reportWebVitals.js","index.js"],"names":["items","href","target","rel","BioContent","itemsToRender","forEach","bullet","rowClass","length","push","className","GithubContent","useState","setItems","useEffect","fetch","githubRoot","then","res","json","resJSONList","sort","a","b","updated_at","catch","err","console","log","project","projectDateString","Date","toLocaleString","split","name","html_url","description","language","skills","roles","title","company","timing","bullets","ResumeContent","role","Object","keys","key","itemClass","itemContents","map","join","Dropdown","props","contentClass","dropdownElement","dropdownType","isDropped","PageElement","text","isFooter","setDropped","onClick","pageElements","App","i","pageElementsComponents","pageElement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c0ce22b.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/bioContent.css';\n\nconst items = [\n  [\"﹡ Works at the intersection of technology and user experience\"],\n  [\"﹡ Troubleshoots professionally\"],\n  [\"﹡ Feels strongly about social justice\"],\n  [\"﹡ Hopes to add a dropdown for 'Music', 'Writing', and/or 'Visual Arts' soon\"],\n  [\"﹡ Loves collaborating! \", <a key=\"gmail\" href=\"mailto:benntilden@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">benntilden@gmail.com</a>],\n  [\"﹡ Watches every Dallas Mavericks game\"],\n  [\"﹡ Moonlights as an amateur, amateur guitarist\"],\n  [\"﹡ Has been listening to \", <a key=\"song\" href=\"https://www.youtube.com/watch?v=k9fzUySXd-4\" target=\"_blank\" rel=\"noopener noreferrer\">this song</a>, \" a lot recently\"],\n  [\"﹡ Took inspiration liberally from other sites to create this\"],\n  [\"﹡ Spends far too much money on synthesizers\"],\n  [\"﹡ Would like to thank you for scrolling this far\"],\n];\n\nfunction BioContent() {\n\n  let itemsToRender = [];\n  items.forEach(bullet => {\n    let rowClass = \"bio-item\" + (itemsToRender.length === items.length - 1 ? \" last-row\" : \"\");\n    itemsToRender.push(\n      <div key={bullet[0]} className={rowClass + \" leftmost-column\"}>\n        <span className=\"bio-item-bullet\">\n          {bullet}\n        </span>\n      </div>\n    );\n  });\n\n  return (\n    <>\n      {itemsToRender}\n    </>\n  );\n}\n\nexport default BioContent;\n","import React, { useState, useEffect } from 'react';\nimport '../css/githubContent.css';\n\nconst githubRoot = \"https://api.github.com/\"\nconst githubRequests = {\n  repos : \"users/ben-tilden/repos\"\n}\nconst reposRequestUrl = githubRoot + githubRequests.repos;\n\nfunction GithubContent() {\n\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    fetch(reposRequestUrl)\n      .then(res => res.json())\n      .then(resJSONList => {\n        if (resJSONList) {\n          resJSONList.sort((a, b) => {\n            return (a.updated_at > b.updated_at) ? -1 : 1;\n          });\n          setItems(resJSONList);\n        }\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  let itemsToRender = [];\n  items.forEach(project => {\n    console.log(itemsToRender.length)\n    console.log(items.length - 1)\n    let rowClass = \"project-item-data\" + (itemsToRender.length === (items.length - 1) * 4 ? \" last-row\" : \"\");\n    let projectDateString = new Date(project.updated_at).toLocaleString().split(',')[0]\n    itemsToRender.push(\n      <div key={projectDateString + project.name} className={rowClass + \" date leftmost-column\"}>{projectDateString}</div>,\n      <div key={project.name} className={rowClass + \" name\"}><a key={project.html_url} href={project.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{project.name}</a></div>,\n      <div key={project.description} className={rowClass + \" desc\"}>{project.description}</div>,\n      <div key={project.language + project.name} className={rowClass + \" lang\"}>{project.language}</div>\n    );\n  });\n\n  return (\n    <>\n      {itemsToRender}\n    </>\n  );\n}\n\nexport default GithubContent;\n","import React from 'react';\nimport '../css/resumeContent.css';\n\nconst items = {\n  skills : [\n    \"JS\", \"Java\", \"C#\", \"Python\", \"C\", \"HTML/CSS\", \"SQL\", \"Microsoft Office\", \"Adobe Creative Suite\"\n  ],\n  roles : [\n    {\n      title : \"Associate Technical Solutions Engineer\",\n      company : \"Flatiron Health\",\n      timing : \"Jan. 2020 - Present\",\n      bullets : [\n        \"﹡ Investigate and resolve over 600 client-reported technical issues and requests regarding the company's EMR application using product knowledge, SQL updates, built-in JavaScript functionality, user authentication management, and review of third party API integration\",\n        \"﹡ Troubleshoot complex software issues involving both frontend and backend logic by studying Splunk logs and a codebase comprised of C#, JS, React, VB, and SQL\",\n        \"﹡ Collaborate cross-functionally with support team, account managers, product managers, and software engineers to actively define timelines, priorities, and solutions for customer reported bugs\",\n        \"﹡ Customize and put into effect tools such as Datadog and New Relic to monitor system performance and contextualize other client interactions\",\n        \"﹡ Build out internal tools using C# and SQL to allow broader usage of technical actions within the 35 person support team\",\n        \"﹡ Perform 35 mass database updates for clients using in-depth SQL queries\"\n      ]\n    },\n    {\n      title : \"Communications Intern\",\n      company : \"The Play Company\",\n      timing : \"Summer 2018\",\n      bullets : [\n        \"﹡ Established a new communications branch for the company, focused around branding and strengthening contact with potential donors\",\n        \"﹡ Created and executed multiple social media campaigns, increasing following on Instagram by over 10%\",\n        \"﹡ Composed layouts for promotional material in Adobe InDesign and circulated said material for upcoming productions via mass email\",\n        \"﹡ Designed the logo and template for a monthly newsletter in Adobe Illustrator\",\n        \"﹡ Coded a dynamic template calendar in Excel to be used for future productions\"\n      ]\n    },\n    {\n      title : \"Rower for the Columbia Lions\",\n      company : \"NCAA Division I Men’s Heavyweight Rowing\",\n      timing : \"Sept. 2015 – June 2019\",\n      bullets : [\n        \"﹡ Dedicated approximately 30 hours per week to practice, conditioning, and competition while maintaining a full course load\",\n        \"﹡ Awarded the Richard Goodridge Jackson Memorial Prize in 2019 for maintaining the highest cumulative GPA on the men's Heavyweight team\"\n      ]\n    }\n  ]\n};\n\nfunction ResumeContent() {\n\n  let itemsToRender = [];\n\n  items.roles.forEach(role => {\n    Object.keys(role).forEach(key => {\n      let itemClass = key;\n      let itemContents = role[key];\n\n      if (key === \"title\" || key === \"bullets\") {\n        itemClass += \" leftmost-column\";\n      }\n      if (key === \"bullets\") {\n        itemContents = itemContents.map(bullet => {\n          return <div key={bullet} className=\"resume-info-bullet\">{bullet}</div>;\n        });\n      }\n\n      itemsToRender.push(\n        <div key={role[key]} className={itemClass}>{itemContents}</div>\n      );\n    });\n  });\n\n  itemsToRender.push(\n    <div key=\"skills\" className=\"skills-item leftmost-column last-row\">{\"Skills: \" + items.skills.join(\", \")}</div>\n  )\n\n  return (\n    <>\n      {itemsToRender}\n    </>\n  );\n}\n\nexport default ResumeContent;\n","import React from 'react';\nimport BioContent from './bioContent.js'\nimport GithubContent from './githubContent.js'\nimport ResumeContent from './resumeContent.js'\nimport '../css/dropdown.css';\n\nfunction Dropdown(props) {\n\n  const dropdownType = props.dropdownType;\n  const isDropped = props.isDropped;\n\n  var contentClass;\n  var dropdownElement;\n\n  if (dropdownType === \"bio\") {\n    contentClass = \" bio-content\";\n    dropdownElement = <BioContent />;\n  } else if (dropdownType === \"resume\") {\n    contentClass = \" resume-content\";\n    dropdownElement = <ResumeContent />;\n  } else if (dropdownType === \"github\") {\n    contentClass = \" github-content\";\n    dropdownElement = <GithubContent />;\n  }\n\n  return (\n    <div className={\"page-element-dropdown-container\" + (isDropped ? \" dropped\" : \" notDropped\")}>\n      <div className={\"page-element-dropdown\" + contentClass}>\n        {dropdownElement}\n      </div>\n    </div>\n  );\n}\n\nexport default Dropdown;\n","import React, { useState } from 'react';\nimport Dropdown from './dropdown.js'\nimport '../css/pageElement.css';\n\nfunction PageElement(props) {\n\n  const text = props.text;\n  const isFooter = props.isFooter;\n  const dropdownType = props.dropdownType;\n\n  const [isDropped, setDropped] = useState(false);\n\n  return (\n    <div className=\"page-element\">\n        <div className={\"page-element-plaque\" + (isFooter ? \" page-element-plaque-foot\" : \"\")} onClick={() => setDropped(!isDropped)}>\n          <div className=\"page-element-text\">\n            {text}\n          </div>\n        </div>\n        {!isFooter && <Dropdown dropdownType={dropdownType} isDropped={isDropped} />}\n    </div>\n  );\n}\n\nexport default PageElement;\n","import PageElement from './pageElement.js'\nimport '../css/App.css';\n\nconst pageElements = [\n  {\n    text : \"Ben Tilden\",\n    isFooter : false,\n    dropdownType : \"bio\"\n  },\n  {\n    text : \"Github Projects\",\n    isFooter : false,\n    dropdownType : \"github\"\n  },\n  {\n    text : \"Resume\",\n    isFooter : false,\n    dropdownType : \"resume\"\n  },\n  {\n    text : \"\",\n    isFooter : true,\n    dropdownType : \"none\"\n  }\n];\n\n\nfunction App() {\n\n  let i = -1;\n  const pageElementsComponents = pageElements.map(\n    pageElement =>\n      <PageElement\n        key={i++}\n        {...pageElement}\n      />\n  );\n\n  return (\n    <div className=\"page-element-container\">\n      {pageElementsComponents}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}